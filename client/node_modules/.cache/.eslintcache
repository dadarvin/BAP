[{"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\index.js":"1","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputCpu.js":"2","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputMotherboard.js":"3","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputGPU.js":"4","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputFan.js":"5","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputCasing.js":"6","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputStorage.js":"7","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputMotherboard.js":"8","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputGPU.js":"9","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputStorage.js":"10","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputCasing.js":"11","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\Login.js":"12","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditCasing.js":"13","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditGPU.js":"14","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditMotherboard.js":"15","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditStorage.js":"16","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputPSU.js":"17","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditPSU.js":"18","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputRAM.js":"19","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditRAM.js":"20","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputFan.js":"21","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditFan.js":"22","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditCPU.js":"23","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\RakitPC.js":"24","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\LowTier.js":"25","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\MidTier.js":"26","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\HighTier.js":"27"},{"size":3958,"mtime":1623629999311,"results":"28","hashOfConfig":"29"},{"size":2479,"mtime":1623521473907,"results":"30","hashOfConfig":"29"},{"size":1739,"mtime":1623426385796,"results":"31","hashOfConfig":"29"},{"size":1601,"mtime":1623426385453,"results":"32","hashOfConfig":"29"},{"size":1415,"mtime":1623426384719,"results":"33","hashOfConfig":"29"},{"size":1722,"mtime":1623426457234,"results":"34","hashOfConfig":"29"},{"size":1518,"mtime":1623426386280,"results":"35","hashOfConfig":"29"},{"size":2652,"mtime":1623605552199,"results":"36","hashOfConfig":"29"},{"size":2471,"mtime":1623516817447,"results":"37","hashOfConfig":"29"},{"size":2427,"mtime":1623629531234,"results":"38","hashOfConfig":"29"},{"size":2414,"mtime":1623525665262,"results":"39","hashOfConfig":"29"},{"size":2821,"mtime":1623628720361,"results":"40","hashOfConfig":"29"},{"size":2735,"mtime":1623521382726,"results":"41","hashOfConfig":"29"},{"size":2913,"mtime":1623521403306,"results":"42","hashOfConfig":"29"},{"size":3203,"mtime":1623521411550,"results":"43","hashOfConfig":"29"},{"size":2710,"mtime":1623630422903,"results":"44","hashOfConfig":"29"},{"size":2400,"mtime":1623517217301,"results":"45","hashOfConfig":"29"},{"size":2722,"mtime":1623521418615,"results":"46","hashOfConfig":"29"},{"size":2390,"mtime":1623517224330,"results":"47","hashOfConfig":"29"},{"size":2710,"mtime":1623524891393,"results":"48","hashOfConfig":"29"},{"size":2304,"mtime":1623516737581,"results":"49","hashOfConfig":"29"},{"size":2483,"mtime":1623521397104,"results":"50","hashOfConfig":"29"},{"size":2929,"mtime":1623521389916,"results":"51","hashOfConfig":"29"},{"size":9650,"mtime":1623621481601,"results":"52","hashOfConfig":"29"},{"size":5712,"mtime":1623623914174,"results":"53","hashOfConfig":"29"},{"size":5714,"mtime":1623623941548,"results":"54","hashOfConfig":"29"},{"size":5718,"mtime":1623623954191,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dq77m7",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\index.js",["126"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputCpu.js",["127"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditCPU from \"./EditCPU\";\r\n\r\nconst InputCpu = () => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    //delete function\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:3080/see/cpu/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setTodos(todos.filter(todo => todo.id_cpu !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getHardware = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/cpu\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getHardware();\r\n    }, []);\r\n\r\n    console.log(todos);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>CPU Lists</h2>\r\n            <table class=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>name</th>\r\n                        <th>core</th>\r\n                        <th>clock</th>\r\n                        <th>integrated</th>\r\n                        <th>price</th>\r\n                        <th>edit</th>\r\n                        <th>delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.map(todo => (\r\n                        <tr>\r\n                            <td>{todo.id_cpu}</td>\r\n                            <td>{todo.name}</td>\r\n                            <td>{todo.core}</td>\r\n                            <td>{todo.clock}</td>\r\n                            <td>{todo.integrated}</td>\r\n                            <td>{todo.price}</td>\r\n                            <td><EditCPU todo={todo} /></td>\r\n                            <td>\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteTodo(todo.id_cpu)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputCpu;",["128","129"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputMotherboard.js",[],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputGPU.js",["130","131"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputFan.js",["132","133"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputCasing.js",["134","135"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\inputStorage.js",["136","137"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputMotherboard.js",["138"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditMotherboard from \"./EditMotherboard\";\r\n\r\nconst InputMotherboard = () => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    //delete function\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:3080/see/motherboard/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setTodos(todos.filter(todo => todo.id_mobo !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getHardware = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/motherboard\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getHardware();\r\n    }, []);\r\n\r\n    console.log(todos);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Motherboard Lists</h2>\r\n            <table class=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>name</th>\r\n                        <th>chipset</th>\r\n                        <th>form_factor</th>\r\n                        <th>ram_slot</th>\r\n                        <th>brand</th>\r\n                        <th>price</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.map(todo => (\r\n                        <tr>\r\n                            <td>{todo.id_mobo}</td>\r\n                            <td>{todo.name}</td>\r\n                            <td>{todo.chipset}</td>\r\n                            <td>{todo.form_factor}</td>\r\n                            <td>{todo.ram_slot} </td>\r\n                            <td>{todo.brand}</td>\r\n                            <td>{todo.price}</td>\r\n                            <td><EditMotherboard todo={todo} /></td>\r\n                            <td>\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteTodo(todo.id_mobo)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputMotherboard;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputGPU.js",["139"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditGPU from \"./EditGPU\";\r\n\r\nconst InputGPU = () => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    //delete function\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:3080/see/gpu/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setTodos(todos.filter(todo => todo.id_gpu !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getHardware = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/gpu\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getHardware();\r\n    }, []);\r\n\r\n    console.log(todos);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GPU Lists</h2>\r\n            <table class=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Chip</th>\r\n                        <th>Memory</th>\r\n                        <th>Clock</th>\r\n                        <th>Price</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.map(todo => (\r\n                        <tr>\r\n                            <td>{todo.id_gpu}</td>\r\n                            <td>{todo.name}</td>\r\n                            <td>{todo.chip}</td>\r\n                            <td>{todo.memory}</td>\r\n                            <td>{todo.clock}</td>\r\n                            <td>{todo.price}</td>\r\n                            <td><EditGPU todo={todo} /></td>\r\n                            <td>\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteTodo(todo.id_gpu)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputGPU;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputStorage.js",["140"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputCasing.js",["141"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditCasing from \"./EditCasing\";\r\n\r\nconst InputCasing = () => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    //delete function\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:3080/see/case/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setTodos(todos.filter(todo => todo.id_case !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getHardware = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/casing\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getHardware();\r\n    }, []);\r\n\r\n    console.log(todos);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Casing Lists</h2>\r\n            <table class=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Form Factor</th>\r\n                        <th>Brand</th>\r\n                        <th>Price</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.map(todo => (\r\n                        <tr>\r\n                            <td>{todo.id_case}</td>\r\n                            <td>{todo.name}</td>\r\n                            <td>{todo.ff_tipe}</td>\r\n                            <td>{todo.brand}</td>\r\n                            <td>{todo.price}</td>\r\n                            <td><EditCasing todo={todo} /></td>\r\n                            <td>\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteTodo(todo.id_case)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default InputCasing;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\Login.js",["142","143"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditCasing.js",["144"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditCasing = ({ todo }) => {\r\n    const [description, setDescription] = useState(todo.name);\r\n    const [form_factor, setDescription2] = useState(todo.ff_tipe);\r\n    const [brand, setDescription3] = useState(todo.brand);\r\n    const [price, setDescription4] = useState(todo.price);\r\n    //edit description function\r\n\r\n    const updateDescription = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description, form_factor, brand, price };\r\n            const response = await fetch(\r\n                `http://localhost:3080/see/case/${todo.id_case}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n            //window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${todo.id_case}`}>\r\n                Edit\r\n            </button>\r\n\r\n\r\n            <div class=\"modal\" id={`id${todo.id_case}`}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n\r\n\r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\">Edit Casing</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"modal-body\" >\r\n                            <input type=\"text\" classname=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\r\n                            <input type=\"text\" classname=\"form-control\" value={form_factor} onChange={e => setDescription2(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={brand} onChange={e => setDescription3(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={price} onChange={e => setDescription4(e.target.value)}></input>\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateDescription(e)}>Edit</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditCasing;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditGPU.js",["145"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditGPU = ({ todo }) => {\r\n    const [description, setDescription] = useState(todo.name);\r\n    const [chip, setDescription2] = useState(todo.chip);\r\n    const [memory, setDescription3] = useState(todo.memory);\r\n    const [clock, setDescription4] = useState(todo.clock);\r\n    const [price, setDescription5] = useState(todo.price);\r\n    //edit description function\r\n\r\n    const updateDescription = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description, chip, memory, clock, price };\r\n            const response = await fetch(\r\n                `http://localhost:3080/see/gpu/${todo.id_gpu}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n            //window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${todo.id_gpu}`}>\r\n                Edit\r\n            </button>\r\n\r\n\r\n            <div class=\"modal\" id={`id${todo.id_gpu}`}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n\r\n\r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\">Edit GPU</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"modal-body\" >\r\n                            <input type=\"text\" classname=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\r\n                            <input type=\"text\" classname=\"form-control\" value={chip} onChange={e => setDescription2(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={memory} onChange={e => setDescription3(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={clock} onChange={e => setDescription4(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={price} onChange={e => setDescription5(e.target.value)}></input>\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateDescription(e)}>Edit</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditGPU;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditMotherboard.js",["146"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditMotherboard = ({ todo }) => {\r\n    const [description, setDescription] = useState(todo.name);\r\n    const [chipset, setDescription2] = useState(todo.chipset);\r\n    const [form_factor, setDescription3] = useState(todo.form_factor);\r\n    const [ram_slot, setDescription4] = useState(todo.ram_slot);\r\n    const [brand, setDescription5] = useState(todo.brand);\r\n    const [price, setDescription6] = useState(todo.price);\r\n    //edit description function\r\n\r\n    const updateDescription = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description, chipset, form_factor, ram_slot, brand, price };\r\n            const response = await fetch(\r\n                `http://localhost:3080/see/motherboard/${todo.id_mobo}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n            //window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${todo.id_mobo}`}>\r\n                Edit\r\n            </button>\r\n\r\n\r\n            <div class=\"modal\" id={`id${todo.id_mobo}`}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n\r\n\r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\">Edit Motherboard</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"modal-body\" >\r\n                            <input type=\"text\" classname=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\r\n                            <input type=\"text\" classname=\"form-control\" value={chipset} onChange={e => setDescription2(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={form_factor} onChange={e => setDescription3(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={ram_slot} onChange={e => setDescription4(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={brand} onChange={e => setDescription5(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={price} onChange={e => setDescription6(e.target.value)}></input>\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateDescription(e)}>Edit</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditMotherboard;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditStorage.js",["147"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputPSU.js",["148"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditPSU from \"./EditPSU\";\r\n\r\nconst InputPSU = () => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    //delete function\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:3080/see/psu/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setTodos(todos.filter(todo => todo.id_psu !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getHardware = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/psu\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getHardware();\r\n    }, []);\r\n\r\n    console.log(todos);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Power Supply Lists</h2>\r\n            <table class=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Form Factor</th>\r\n                        <th>Watt</th>\r\n                        <th>Price</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.map(todo => (\r\n                        <tr>\r\n                            <td>{todo.id_psu}</td>\r\n                            <td>{todo.name}</td>\r\n                            <td>{todo.form_factor}</td>\r\n                            <td>{todo.watt}</td>\r\n                            <td>{todo.price}</td>\r\n                            <td><EditPSU todo={todo} /></td>\r\n                            <td>\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteTodo(todo.id_psu)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default InputPSU;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditPSU.js",["149"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditPSU = ({ todo }) => {\r\n    const [description, setDescription] = useState(todo.name);\r\n    const [form_factor, setDescription2] = useState(todo.form_factor);\r\n    const [watt, setDescription3] = useState(todo.watt);\r\n    const [price, setDescription4] = useState(todo.price);\r\n    //edit description function\r\n\r\n    const updateDescription = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description, form_factor, watt, price };\r\n            const response = await fetch(\r\n                `http://localhost:3080/see/psu/${todo.id_psu}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n            //window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${todo.id_psu}`}>\r\n                Edit\r\n            </button>\r\n\r\n\r\n            <div class=\"modal\" id={`id${todo.id_psu}`}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n\r\n\r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\">Edit PSU</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"modal-body\" >\r\n                            <input type=\"text\" classname=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\r\n                            <input type=\"text\" classname=\"form-control\" value={form_factor} onChange={e => setDescription2(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={watt} onChange={e => setDescription3(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={price} onChange={e => setDescription4(e.target.value)}></input>\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateDescription(e)}>Edit</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditPSU;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputRAM.js",["150"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditRAM from \"./EditRAM\";\r\n\r\nconst InputRAM = () => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    //delete todo function\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:3080/see/ram/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setTodos(todos.filter(todo => todo.id_ram !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getHardware = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/ram\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getHardware();\r\n    }, []);\r\n\r\n    console.log(todos);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>RAM Lists</h2>\r\n            <table class=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Speed</th>\r\n                        <th>Modules</th>\r\n                        <th>Price</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.map(todo => (\r\n                        <tr>\r\n                            <td>{todo.id_ram}</td>\r\n                            <td>{todo.name}</td>\r\n                            <td>{todo.speed}</td>\r\n                            <td>{todo.modules}</td>\r\n                            <td>{todo.price}</td>\r\n                            <td><EditRAM todo={todo} /></td>\r\n                            <td>\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteTodo(todo.id_ram)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default InputRAM;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditRAM.js",["151"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditRAM = ({ todo }) => {\r\n    const [description, setDescription] = useState(todo.name);\r\n    const [speed, setDescription2] = useState(todo.speed);\r\n    const [modules, setDescription3] = useState(todo.modules);\r\n    const [price, setDescription4] = useState(todo.price);\r\n    //edit description function\r\n\r\n    const updateDescription = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description, speed, modules, price };\r\n            const response = await fetch(\r\n                `http://localhost:3080/see/ram/${todo.id_ram}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n            //window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${todo.id_ram}`}>\r\n                Edit\r\n            </button>\r\n\r\n\r\n            <div class=\"modal\" id={`id${todo.id_ram}`}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n\r\n\r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\">Edit RAM</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"modal-body\" >\r\n                            <input type=\"text\" classname=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\r\n                            <input type=\"text\" classname=\"form-control\" value={speed} onChange={e => setDescription2(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={modules} onChange={e => setDescription3(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={price} onChange={e => setDescription4(e.target.value)}></input>\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateDescription(e)}>Edit</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditRAM;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\InputFan.js",["152"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditFan from \"./EditFan\";\r\n\r\nconst InputFan = () => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    //delete function\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:3080/see/fan/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setTodos(todos.filter(todo => todo.id_fan !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getHardware = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/fan\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getHardware();\r\n    }, []);\r\n\r\n    console.log(todos);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\" \"}\r\n            <h2>Fan Lists</h2>\r\n            <table class=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>RPM</th>\r\n                        <th>Price</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.map(todo => (\r\n                        <tr>\r\n                            <td>{todo.id_fan}</td>\r\n                            <td>{todo.name}</td>\r\n                            <td>{todo.rpm}</td>\r\n                            <td>{todo.price}</td>\r\n                            <td><EditFan todo={todo} /></td>\r\n                            <td>\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteTodo(todo.id_fan)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputFan;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditFan.js",["153"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditFan = ({ todo }) => {\r\n    const [description, setDescription] = useState(todo.name);\r\n    const [rpm, setDescription2] = useState(todo.rpm);\r\n    const [price, setDescription3] = useState(todo.price);\r\n    //edit description function\r\n\r\n    const updateDescription = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description, rpm, price };\r\n            const response = await fetch(\r\n                `http://localhost:3080/see/fan/${todo.id_fan}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n            //window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${todo.id_fan}`}>\r\n                Edit\r\n            </button>\r\n\r\n\r\n            <div class=\"modal\" id={`id${todo.id_fan}`}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n\r\n\r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\">Edit Fan</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"modal-body\" >\r\n                            <input type=\"text\" classname=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\r\n                            <input type=\"text\" classname=\"form-control\" value={rpm} onChange={e => setDescription2(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={price} onChange={e => setDescription3(e.target.value)}></input>\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateDescription(e)}>Edit</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditFan;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\EditCPU.js",["154"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditCPU = ({ todo }) => {\r\n    const [description, setDescription] = useState(todo.name);\r\n    const [core, setDescription2] = useState(todo.core);\r\n    const [clock, setDescription3] = useState(todo.clock);\r\n    const [integrated, setDescription4] = useState(todo.integrated);\r\n    const [price, setDescription5] = useState(todo.price);\r\n    //edit description function\r\n\r\n    const updateDescription = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description, core, clock, integrated, price };\r\n            const response = await fetch(\r\n                `http://localhost:3080/see/cpu/${todo.id_cpu}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n            //window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${todo.id_cpu}`}>\r\n                Edit\r\n            </button>\r\n\r\n\r\n            <div class=\"modal\" id={`id${todo.id_cpu}`}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n\r\n\r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\">Edit CPU</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"modal-body\" >\r\n                            <input type=\"text\" classname=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\r\n                            <input type=\"text\" classname=\"form-control\" value={core} onChange={e => setDescription2(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={clock} onChange={e => setDescription3(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={integrated} onChange={e => setDescription4(e.target.value)}></input>\r\n                            <input type=\"text\" classname=\"form-control\" value={price} onChange={e => setDescription5(e.target.value)}></input>\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateDescription(e)}>Edit</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditCPU;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\RakitPC.js",["155","156","157"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nconst RakitPC = () => {\r\n    const [cpu, setTodos] = useState([]);\r\n    const [mobo, setTodos2] = useState([]);\r\n    const [ram, setTodos3] = useState([]);\r\n    const [gpu, setTodos4] = useState([]);\r\n    const [storage, setTodos5] = useState([]);\r\n    const [psu, setTodos6] = useState([]);\r\n    const [casing, setTodos7] = useState([]);\r\n    const [fan, setTodos8] = useState([]);\r\n    const [rakit, setTodos9] = useState([]);\r\n\r\n    const getCPU = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/cpu\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    const getMotherboard = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/motherboard\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos2(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    const getRAM = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/ram\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos3(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    const getGPU = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/gpu\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos4(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    const getStorage = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/storage\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos5(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    const getPSU = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/psu\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos6(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    const getCasing = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/case\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos7(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    const getFan = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/see/fan\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos8(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getPrice = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3080/price\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos9(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const updatePC = async (id, id2) => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:3080/see/rakitpc/${id}/${id2}`, {\r\n                method: \"PUT\"\r\n            });\r\n            //setTodos(todos.filter(todo => todo.id_mobo !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    let hargaCPU = [];\r\n\r\n    useEffect(() => {\r\n        getCPU();\r\n        getMotherboard();\r\n        getRAM();\r\n        getGPU();\r\n        getStorage();\r\n        getPSU();\r\n        getCasing();\r\n        getFan();\r\n    }, []);\r\n\r\n    console.log(cpu);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Pilih Perangkat PC mu !</h2>\r\n            <br></br>\r\n            <div class=\"input-group mb-3\">\r\n\r\n                <div class=\"input-group-prepend\">\r\n                    <label class=\"input-group-text\" for=\"inputGroupSelect01\">Processor</label>\r\n                </div>\r\n\r\n                {/* <select class=\"custom-select\" id=\"inputGroupSelect01\" onChange={() => updatePC(hargaCPU)}> */}\r\n                <select class=\"custom-select\" id=\"inputGroupSelect01\" value={cpu.price} onChange={(e) => updatePC(e.currentTarget.value, 1)}>\r\n                    <option selected>Ambil CPU...</option>\r\n                    {cpu.map(todo => (\r\n                        <option value={todo.price}>{todo.name} - Rp.{todo.price}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                    <label class=\"input-group-text\" for=\"inputGroupSelect01\">Motherboard</label>\r\n                </div>\r\n                <select class=\"custom-select\" id=\"inputGroupSelect01\" value={mobo.price} onChange={(e) => updatePC(e.currentTarget.value, 2)}>\r\n                    <option selected>Ambil Motherboard...</option>\r\n                    {mobo.map(todo => (\r\n                        <option value={todo.price}>{todo.name} - Rp.{todo.price}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                    <label class=\"input-group-text\" for=\"inputGroupSelect01\">RAM</label>\r\n                </div>\r\n                <select class=\"custom-select\" id=\"inputGroupSelect01\" value={ram.price} onChange={(e) => updatePC(e.currentTarget.value, 3)}>\r\n                    <option selected>Ambil RAM...</option>\r\n                    {ram.map(todo => (\r\n                        <option value={todo.price}>{todo.name} - Rp.{todo.price}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                    <label class=\"input-group-text\" for=\"inputGroupSelect01\">VGA</label>\r\n                </div>\r\n                <select class=\"custom-select\" id=\"inputGroupSelect01\" value={gpu.price} onChange={(e) => updatePC(e.currentTarget.value, 4)}>\r\n                    <option selected>Ambil VGA...</option>\r\n                    {gpu.map(todo => (\r\n                        <option value={todo.price}>{todo.name} {todo.chip} - Rp.{todo.price}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                    <label class=\"input-group-text\" for=\"inputGroupSelect01\" >Storage</label>\r\n                </div>\r\n                <select class=\"custom-select\" id=\"inputGroupSelect01\" value={storage.price} onChange={(e) => updatePC(e.currentTarget.value, 5)}>\r\n                    <option selected>Ambil Storage...</option>\r\n                    {storage.map(todo => (\r\n                        <option value={todo.price}>{todo.tipe} {todo.name} {todo.size}GB - Rp.{todo.price}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div class=\"input-group mb-4\">\r\n                <div class=\"input-group-prepend\">\r\n                    <label class=\"input-group-text\" for=\"inputGroupSelect01\">PSU</label>\r\n                </div>\r\n                <select class=\"custom-select\" id=\"inputGroupSelect01\" value={psu.price} onChange={(e) => updatePC(e.currentTarget.value, 6)}>\r\n                    <option selected>Ambil Power Supply...</option>\r\n                    {psu.map(todo => (\r\n                        <option value={todo.price}>{todo.name} {todo.watt} {todo.form_factor} - Rp.{todo.price}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div class=\"input-group mb-4\">\r\n                <div class=\"input-group-prepend\">\r\n                    <label class=\"input-group-text\" for=\"inputGroupSelect01\">Casing</label>\r\n                </div>\r\n                <select class=\"custom-select\" id=\"inputGroupSelect01\" value={casing.price} onChange={(e) => updatePC(e.currentTarget.value, 7)}>\r\n                    <option selected>Ambil Casing...</option>\r\n                    {casing.map(todo => (\r\n                        <option value={todo.price}>{todo.name} - Rp.{todo.price}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div class=\"input-group mb-4\">\r\n                <div class=\"input-group-prepend\">\r\n                    <label class=\"input-group-text\" for=\"inputGroupSelect01\">Fan</label>\r\n                </div>\r\n                <select class=\"custom-select\" id=\"inputGroupSelect01\" value={fan.price} onChange={(e) => updatePC(e.currentTarget.value, 8)}>\r\n                    <option selected>Ambil Fan...</option>\r\n                    {fan.map(todo => (\r\n                        <option value={todo.price}>{todo.name} - Rp.{todo.price}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"d-flex justify-content-center\">\r\n                <p class=\"mb-0\">\r\n                    <a id=\"kuyRakit\" class=\"btn btn-primary btn-circled\" onClick={() => getPrice()}>\r\n                        Rakit!\r\n                    </a>\r\n                </p>\r\n            </div>\r\n\r\n            <div class=\"d-flex justify-content-end\">\r\n                <h3>Total Harga : &nbsp; &nbsp; &nbsp;</h3>\r\n\r\n                <h4>Rp {rakit.sum}</h4>\r\n\r\n\r\n            </div>\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default RakitPC;","C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\LowTier.js",["158"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\MidTier.js",["159"],"C:\\Users\\Dar\\Desktop\\Projek SBD\\Projek_web\\client\\src\\components\\HighTier.js",["160"],{"ruleId":"161","severity":1,"message":"162","line":156,"column":11,"nodeType":"163","messageId":"164","endLine":156,"endColumn":19},{"ruleId":"161","severity":1,"message":"165","line":10,"column":19,"nodeType":"163","messageId":"164","endLine":10,"endColumn":29},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":2,"message":"171","line":4,"column":31,"nodeType":"163","endLine":4,"endColumn":39},{"ruleId":"170","severity":2,"message":"172","line":19,"column":5,"nodeType":"163","endLine":19,"endColumn":14},{"ruleId":"170","severity":2,"message":"173","line":4,"column":31,"nodeType":"163","endLine":4,"endColumn":39},{"ruleId":"170","severity":2,"message":"174","line":19,"column":5,"nodeType":"163","endLine":19,"endColumn":14},{"ruleId":"170","severity":2,"message":"175","line":4,"column":31,"nodeType":"163","endLine":4,"endColumn":39},{"ruleId":"170","severity":2,"message":"176","line":19,"column":5,"nodeType":"163","endLine":19,"endColumn":14},{"ruleId":"170","severity":2,"message":"177","line":4,"column":31,"nodeType":"163","endLine":4,"endColumn":39},{"ruleId":"170","severity":2,"message":"178","line":19,"column":5,"nodeType":"163","endLine":19,"endColumn":14},{"ruleId":"161","severity":1,"message":"165","line":10,"column":19,"nodeType":"163","messageId":"164","endLine":10,"endColumn":29},{"ruleId":"161","severity":1,"message":"165","line":10,"column":19,"nodeType":"163","messageId":"164","endLine":10,"endColumn":29},{"ruleId":"161","severity":1,"message":"165","line":10,"column":19,"nodeType":"163","messageId":"164","endLine":10,"endColumn":29},{"ruleId":"161","severity":1,"message":"165","line":10,"column":19,"nodeType":"163","messageId":"164","endLine":10,"endColumn":29},{"ruleId":"161","severity":1,"message":"179","line":1,"column":27,"nodeType":"163","messageId":"164","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"181","line":20,"column":29,"nodeType":"182","messageId":"183","endLine":20,"endColumn":31},{"ruleId":"161","severity":1,"message":"162","line":14,"column":19,"nodeType":"163","messageId":"164","endLine":14,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":15,"column":19,"nodeType":"163","messageId":"164","endLine":15,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":16,"column":19,"nodeType":"163","messageId":"164","endLine":16,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":14,"column":19,"nodeType":"163","messageId":"164","endLine":14,"endColumn":27},{"ruleId":"161","severity":1,"message":"165","line":10,"column":19,"nodeType":"163","messageId":"164","endLine":10,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":14,"column":19,"nodeType":"163","messageId":"164","endLine":14,"endColumn":27},{"ruleId":"161","severity":1,"message":"165","line":10,"column":19,"nodeType":"163","messageId":"164","endLine":10,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":14,"column":19,"nodeType":"163","messageId":"164","endLine":14,"endColumn":27},{"ruleId":"161","severity":1,"message":"165","line":10,"column":19,"nodeType":"163","messageId":"164","endLine":10,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":13,"column":19,"nodeType":"163","messageId":"164","endLine":13,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":15,"column":19,"nodeType":"163","messageId":"164","endLine":15,"endColumn":27},{"ruleId":"161","severity":1,"message":"165","line":108,"column":19,"nodeType":"163","messageId":"164","endLine":108,"endColumn":29},{"ruleId":"161","severity":1,"message":"184","line":117,"column":9,"nodeType":"163","messageId":"164","endLine":117,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":232,"column":21,"nodeType":"187","endLine":232,"endColumn":101},{"ruleId":"161","severity":1,"message":"188","line":1,"column":10,"nodeType":"163","messageId":"164","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"188","line":1,"column":10,"nodeType":"163","messageId":"164","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"188","line":1,"column":10,"nodeType":"163","messageId":"164","endLine":1,"endColumn":13},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used.","no-native-reassign",["189"],"no-negated-in-lhs",["190"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"inputGPU\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"inputGPU\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useState\" is called in function \"inputFan\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"inputFan\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useState\" is called in function \"inputCasing\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"inputCasing\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useState\" is called in function \"inputStorage\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"inputStorage\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'hargaCPU' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'get' is defined but never used.","no-global-assign","no-unsafe-negation"]